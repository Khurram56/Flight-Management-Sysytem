#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flight_Management_System
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DbFlight")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFlight(Flight instance);
    partial void UpdateFlight(Flight instance);
    partial void DeleteFlight(Flight instance);
    partial void InsertFlight_Detail(Flight_Detail instance);
    partial void UpdateFlight_Detail(Flight_Detail instance);
    partial void DeleteFlight_Detail(Flight_Detail instance);
    partial void InsertTicket_Detail(Ticket_Detail instance);
    partial void UpdateTicket_Detail(Ticket_Detail instance);
    partial void DeleteTicket_Detail(Ticket_Detail instance);
    partial void InsertPassenger_Detail(Passenger_Detail instance);
    partial void UpdatePassenger_Detail(Passenger_Detail instance);
    partial void DeletePassenger_Detail(Passenger_Detail instance);
    partial void InsertCredit_Card_Detail(Credit_Card_Detail instance);
    partial void UpdateCredit_Card_Detail(Credit_Card_Detail instance);
    partial void DeleteCredit_Card_Detail(Credit_Card_Detail instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DbFlightConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Flight> Flights
		{
			get
			{
				return this.GetTable<Flight>();
			}
		}
		
		public System.Data.Linq.Table<Flight_Detail> Flight_Details
		{
			get
			{
				return this.GetTable<Flight_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Detail> Ticket_Details
		{
			get
			{
				return this.GetTable<Ticket_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Passenger_Detail> Passenger_Details
		{
			get
			{
				return this.GetTable<Passenger_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Credit_Card_Detail> Credit_Card_Details
		{
			get
			{
				return this.GetTable<Credit_Card_Detail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Flight")]
	public partial class Flight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Flight_ID;
		
		private System.Nullable<int> _Airline_ID;
		
		private string _Airline_Name;
		
		private string _From_Location;
		
		private string _To_Location;
		
		private string _Departure_Time;
		
		private string _Arrival_Time;
		
		private string _Duration;
		
		private System.Nullable<int> _Total_Seats;
		
		private EntitySet<Flight_Detail> _Flight_Details;
		
		private EntitySet<Ticket_Detail> _Ticket_Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlight_IDChanging(int value);
    partial void OnFlight_IDChanged();
    partial void OnAirline_IDChanging(System.Nullable<int> value);
    partial void OnAirline_IDChanged();
    partial void OnAirline_NameChanging(string value);
    partial void OnAirline_NameChanged();
    partial void OnFrom_LocationChanging(string value);
    partial void OnFrom_LocationChanged();
    partial void OnTo_LocationChanging(string value);
    partial void OnTo_LocationChanged();
    partial void OnDeparture_TimeChanging(string value);
    partial void OnDeparture_TimeChanged();
    partial void OnArrival_TimeChanging(string value);
    partial void OnArrival_TimeChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnTotal_SeatsChanging(System.Nullable<int> value);
    partial void OnTotal_SeatsChanged();
    #endregion
		
		public Flight()
		{
			this._Flight_Details = new EntitySet<Flight_Detail>(new Action<Flight_Detail>(this.attach_Flight_Details), new Action<Flight_Detail>(this.detach_Flight_Details));
			this._Ticket_Details = new EntitySet<Ticket_Detail>(new Action<Ticket_Detail>(this.attach_Ticket_Details), new Action<Ticket_Detail>(this.detach_Ticket_Details));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flight_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Flight_ID
		{
			get
			{
				return this._Flight_ID;
			}
			set
			{
				if ((this._Flight_ID != value))
				{
					this.OnFlight_IDChanging(value);
					this.SendPropertyChanging();
					this._Flight_ID = value;
					this.SendPropertyChanged("Flight_ID");
					this.OnFlight_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Airline_ID", DbType="Int")]
		public System.Nullable<int> Airline_ID
		{
			get
			{
				return this._Airline_ID;
			}
			set
			{
				if ((this._Airline_ID != value))
				{
					this.OnAirline_IDChanging(value);
					this.SendPropertyChanging();
					this._Airline_ID = value;
					this.SendPropertyChanged("Airline_ID");
					this.OnAirline_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Airline_Name", DbType="VarChar(50)")]
		public string Airline_Name
		{
			get
			{
				return this._Airline_Name;
			}
			set
			{
				if ((this._Airline_Name != value))
				{
					this.OnAirline_NameChanging(value);
					this.SendPropertyChanging();
					this._Airline_Name = value;
					this.SendPropertyChanged("Airline_Name");
					this.OnAirline_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_From_Location", DbType="VarChar(50)")]
		public string From_Location
		{
			get
			{
				return this._From_Location;
			}
			set
			{
				if ((this._From_Location != value))
				{
					this.OnFrom_LocationChanging(value);
					this.SendPropertyChanging();
					this._From_Location = value;
					this.SendPropertyChanged("From_Location");
					this.OnFrom_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_To_Location", DbType="VarChar(50)")]
		public string To_Location
		{
			get
			{
				return this._To_Location;
			}
			set
			{
				if ((this._To_Location != value))
				{
					this.OnTo_LocationChanging(value);
					this.SendPropertyChanging();
					this._To_Location = value;
					this.SendPropertyChanged("To_Location");
					this.OnTo_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departure_Time", DbType="VarChar(50)")]
		public string Departure_Time
		{
			get
			{
				return this._Departure_Time;
			}
			set
			{
				if ((this._Departure_Time != value))
				{
					this.OnDeparture_TimeChanging(value);
					this.SendPropertyChanging();
					this._Departure_Time = value;
					this.SendPropertyChanged("Departure_Time");
					this.OnDeparture_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arrival_Time", DbType="VarChar(50)")]
		public string Arrival_Time
		{
			get
			{
				return this._Arrival_Time;
			}
			set
			{
				if ((this._Arrival_Time != value))
				{
					this.OnArrival_TimeChanging(value);
					this.SendPropertyChanging();
					this._Arrival_Time = value;
					this.SendPropertyChanged("Arrival_Time");
					this.OnArrival_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="VarChar(50)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Seats", DbType="Int")]
		public System.Nullable<int> Total_Seats
		{
			get
			{
				return this._Total_Seats;
			}
			set
			{
				if ((this._Total_Seats != value))
				{
					this.OnTotal_SeatsChanging(value);
					this.SendPropertyChanging();
					this._Total_Seats = value;
					this.SendPropertyChanged("Total_Seats");
					this.OnTotal_SeatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Flight_Detail", Storage="_Flight_Details", ThisKey="Flight_ID", OtherKey="Flight_ID")]
		public EntitySet<Flight_Detail> Flight_Details
		{
			get
			{
				return this._Flight_Details;
			}
			set
			{
				this._Flight_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Ticket_Detail", Storage="_Ticket_Details", ThisKey="Flight_ID", OtherKey="Flight_ID")]
		public EntitySet<Ticket_Detail> Ticket_Details
		{
			get
			{
				return this._Ticket_Details;
			}
			set
			{
				this._Ticket_Details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Flight_Details(Flight_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Flight = this;
		}
		
		private void detach_Flight_Details(Flight_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Flight = null;
		}
		
		private void attach_Ticket_Details(Ticket_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Flight = this;
		}
		
		private void detach_Ticket_Details(Ticket_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Flight = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Flight_Details")]
	public partial class Flight_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FD_ID;
		
		private System.Nullable<int> _Flight_ID;
		
		private System.Nullable<System.DateTime> _Flight_Departure_Date;
		
		private System.Nullable<int> _Price;
		
		private System.Nullable<int> _Available_Seats;
		
		private EntitySet<Ticket_Detail> _Ticket_Details;
		
		private EntityRef<Flight> _Flight;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFD_IDChanging(int value);
    partial void OnFD_IDChanged();
    partial void OnFlight_IDChanging(System.Nullable<int> value);
    partial void OnFlight_IDChanged();
    partial void OnFlight_Departure_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnFlight_Departure_DateChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnAvailable_SeatsChanging(System.Nullable<int> value);
    partial void OnAvailable_SeatsChanged();
    #endregion
		
		public Flight_Detail()
		{
			this._Ticket_Details = new EntitySet<Ticket_Detail>(new Action<Ticket_Detail>(this.attach_Ticket_Details), new Action<Ticket_Detail>(this.detach_Ticket_Details));
			this._Flight = default(EntityRef<Flight>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FD_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FD_ID
		{
			get
			{
				return this._FD_ID;
			}
			set
			{
				if ((this._FD_ID != value))
				{
					this.OnFD_IDChanging(value);
					this.SendPropertyChanging();
					this._FD_ID = value;
					this.SendPropertyChanged("FD_ID");
					this.OnFD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flight_ID", DbType="Int")]
		public System.Nullable<int> Flight_ID
		{
			get
			{
				return this._Flight_ID;
			}
			set
			{
				if ((this._Flight_ID != value))
				{
					if (this._Flight.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlight_IDChanging(value);
					this.SendPropertyChanging();
					this._Flight_ID = value;
					this.SendPropertyChanged("Flight_ID");
					this.OnFlight_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flight_Departure_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Flight_Departure_Date
		{
			get
			{
				return this._Flight_Departure_Date;
			}
			set
			{
				if ((this._Flight_Departure_Date != value))
				{
					this.OnFlight_Departure_DateChanging(value);
					this.SendPropertyChanging();
					this._Flight_Departure_Date = value;
					this.SendPropertyChanged("Flight_Departure_Date");
					this.OnFlight_Departure_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available_Seats", DbType="Int")]
		public System.Nullable<int> Available_Seats
		{
			get
			{
				return this._Available_Seats;
			}
			set
			{
				if ((this._Available_Seats != value))
				{
					this.OnAvailable_SeatsChanging(value);
					this.SendPropertyChanging();
					this._Available_Seats = value;
					this.SendPropertyChanged("Available_Seats");
					this.OnAvailable_SeatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Detail_Ticket_Detail", Storage="_Ticket_Details", ThisKey="FD_ID", OtherKey="FD_ID")]
		public EntitySet<Ticket_Detail> Ticket_Details
		{
			get
			{
				return this._Ticket_Details;
			}
			set
			{
				this._Ticket_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Flight_Detail", Storage="_Flight", ThisKey="Flight_ID", OtherKey="Flight_ID", IsForeignKey=true)]
		public Flight Flight
		{
			get
			{
				return this._Flight.Entity;
			}
			set
			{
				Flight previousValue = this._Flight.Entity;
				if (((previousValue != value) 
							|| (this._Flight.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Flight.Entity = null;
						previousValue.Flight_Details.Remove(this);
					}
					this._Flight.Entity = value;
					if ((value != null))
					{
						value.Flight_Details.Add(this);
						this._Flight_ID = value.Flight_ID;
					}
					else
					{
						this._Flight_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Flight");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Details(Ticket_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Flight_Detail = this;
		}
		
		private void detach_Ticket_Details(Ticket_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Flight_Detail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Details")]
	public partial class Ticket_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ticket_ID;
		
		private System.Nullable<int> _Profile_ID;
		
		private System.Nullable<int> _Flight_ID;
		
		private System.Nullable<int> _FD_ID;
		
		private string _Status;
		
		private EntityRef<Flight> _Flight;
		
		private EntityRef<Flight_Detail> _Flight_Detail;
		
		private EntityRef<Passenger_Detail> _Passenger_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicket_IDChanging(int value);
    partial void OnTicket_IDChanged();
    partial void OnProfile_IDChanging(System.Nullable<int> value);
    partial void OnProfile_IDChanged();
    partial void OnFlight_IDChanging(System.Nullable<int> value);
    partial void OnFlight_IDChanged();
    partial void OnFD_IDChanging(System.Nullable<int> value);
    partial void OnFD_IDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Ticket_Detail()
		{
			this._Flight = default(EntityRef<Flight>);
			this._Flight_Detail = default(EntityRef<Flight_Detail>);
			this._Passenger_Detail = default(EntityRef<Passenger_Detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ticket_ID
		{
			get
			{
				return this._Ticket_ID;
			}
			set
			{
				if ((this._Ticket_ID != value))
				{
					this.OnTicket_IDChanging(value);
					this.SendPropertyChanging();
					this._Ticket_ID = value;
					this.SendPropertyChanged("Ticket_ID");
					this.OnTicket_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profile_ID", DbType="Int")]
		public System.Nullable<int> Profile_ID
		{
			get
			{
				return this._Profile_ID;
			}
			set
			{
				if ((this._Profile_ID != value))
				{
					if (this._Passenger_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfile_IDChanging(value);
					this.SendPropertyChanging();
					this._Profile_ID = value;
					this.SendPropertyChanged("Profile_ID");
					this.OnProfile_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flight_ID", DbType="Int")]
		public System.Nullable<int> Flight_ID
		{
			get
			{
				return this._Flight_ID;
			}
			set
			{
				if ((this._Flight_ID != value))
				{
					if (this._Flight.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlight_IDChanging(value);
					this.SendPropertyChanging();
					this._Flight_ID = value;
					this.SendPropertyChanged("Flight_ID");
					this.OnFlight_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FD_ID", DbType="Int")]
		public System.Nullable<int> FD_ID
		{
			get
			{
				return this._FD_ID;
			}
			set
			{
				if ((this._FD_ID != value))
				{
					if (this._Flight_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFD_IDChanging(value);
					this.SendPropertyChanging();
					this._FD_ID = value;
					this.SendPropertyChanged("FD_ID");
					this.OnFD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Ticket_Detail", Storage="_Flight", ThisKey="Flight_ID", OtherKey="Flight_ID", IsForeignKey=true)]
		public Flight Flight
		{
			get
			{
				return this._Flight.Entity;
			}
			set
			{
				Flight previousValue = this._Flight.Entity;
				if (((previousValue != value) 
							|| (this._Flight.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Flight.Entity = null;
						previousValue.Ticket_Details.Remove(this);
					}
					this._Flight.Entity = value;
					if ((value != null))
					{
						value.Ticket_Details.Add(this);
						this._Flight_ID = value.Flight_ID;
					}
					else
					{
						this._Flight_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Flight");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Flight_Detail_Ticket_Detail", Storage="_Flight_Detail", ThisKey="FD_ID", OtherKey="FD_ID", IsForeignKey=true)]
		public Flight_Detail Flight_Detail
		{
			get
			{
				return this._Flight_Detail.Entity;
			}
			set
			{
				Flight_Detail previousValue = this._Flight_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Flight_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Flight_Detail.Entity = null;
						previousValue.Ticket_Details.Remove(this);
					}
					this._Flight_Detail.Entity = value;
					if ((value != null))
					{
						value.Ticket_Details.Add(this);
						this._FD_ID = value.FD_ID;
					}
					else
					{
						this._FD_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Flight_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passenger_Detail_Ticket_Detail", Storage="_Passenger_Detail", ThisKey="Profile_ID", OtherKey="Profile_ID", IsForeignKey=true)]
		public Passenger_Detail Passenger_Detail
		{
			get
			{
				return this._Passenger_Detail.Entity;
			}
			set
			{
				Passenger_Detail previousValue = this._Passenger_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Passenger_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Passenger_Detail.Entity = null;
						previousValue.Ticket_Details.Remove(this);
					}
					this._Passenger_Detail.Entity = value;
					if ((value != null))
					{
						value.Ticket_Details.Add(this);
						this._Profile_ID = value.Profile_ID;
					}
					else
					{
						this._Profile_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Passenger_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Passenger_Details")]
	public partial class Passenger_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Profile_ID;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Address;
		
		private string _Tel_No;
		
		private string _Password;
		
		private string _Email_ID;
		
		private EntitySet<Ticket_Detail> _Ticket_Details;
		
		private EntitySet<Credit_Card_Detail> _Credit_Card_Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfile_IDChanging(int value);
    partial void OnProfile_IDChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTel_NoChanging(string value);
    partial void OnTel_NoChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmail_IDChanging(string value);
    partial void OnEmail_IDChanged();
    #endregion
		
		public Passenger_Detail()
		{
			this._Ticket_Details = new EntitySet<Ticket_Detail>(new Action<Ticket_Detail>(this.attach_Ticket_Details), new Action<Ticket_Detail>(this.detach_Ticket_Details));
			this._Credit_Card_Details = new EntitySet<Credit_Card_Detail>(new Action<Credit_Card_Detail>(this.attach_Credit_Card_Details), new Action<Credit_Card_Detail>(this.detach_Credit_Card_Details));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profile_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Profile_ID
		{
			get
			{
				return this._Profile_ID;
			}
			set
			{
				if ((this._Profile_ID != value))
				{
					this.OnProfile_IDChanging(value);
					this.SendPropertyChanging();
					this._Profile_ID = value;
					this.SendPropertyChanged("Profile_ID");
					this.OnProfile_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="NVarChar(50)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(50)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel_No", DbType="NVarChar(50)")]
		public string Tel_No
		{
			get
			{
				return this._Tel_No;
			}
			set
			{
				if ((this._Tel_No != value))
				{
					this.OnTel_NoChanging(value);
					this.SendPropertyChanging();
					this._Tel_No = value;
					this.SendPropertyChanged("Tel_No");
					this.OnTel_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_ID", DbType="NVarChar(50)")]
		public string Email_ID
		{
			get
			{
				return this._Email_ID;
			}
			set
			{
				if ((this._Email_ID != value))
				{
					this.OnEmail_IDChanging(value);
					this.SendPropertyChanging();
					this._Email_ID = value;
					this.SendPropertyChanged("Email_ID");
					this.OnEmail_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passenger_Detail_Ticket_Detail", Storage="_Ticket_Details", ThisKey="Profile_ID", OtherKey="Profile_ID")]
		public EntitySet<Ticket_Detail> Ticket_Details
		{
			get
			{
				return this._Ticket_Details;
			}
			set
			{
				this._Ticket_Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passenger_Detail_Credit_Card_Detail", Storage="_Credit_Card_Details", ThisKey="Profile_ID", OtherKey="Profile_ID")]
		public EntitySet<Credit_Card_Detail> Credit_Card_Details
		{
			get
			{
				return this._Credit_Card_Details;
			}
			set
			{
				this._Credit_Card_Details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Details(Ticket_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Passenger_Detail = this;
		}
		
		private void detach_Ticket_Details(Ticket_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Passenger_Detail = null;
		}
		
		private void attach_Credit_Card_Details(Credit_Card_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Passenger_Detail = this;
		}
		
		private void detach_Credit_Card_Details(Credit_Card_Detail entity)
		{
			this.SendPropertyChanging();
			entity.Passenger_Detail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Credit_Card_Details")]
	public partial class Credit_Card_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _Profile_ID;
		
		private int _Card_No;
		
		private string _Card_Type;
		
		private string _Expiration_Month;
		
		private string _Expiration_Year;
		
		private EntityRef<Passenger_Detail> _Passenger_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfile_IDChanging(System.Nullable<int> value);
    partial void OnProfile_IDChanged();
    partial void OnCard_NoChanging(int value);
    partial void OnCard_NoChanged();
    partial void OnCard_TypeChanging(string value);
    partial void OnCard_TypeChanged();
    partial void OnExpiration_MonthChanging(string value);
    partial void OnExpiration_MonthChanged();
    partial void OnExpiration_YearChanging(string value);
    partial void OnExpiration_YearChanged();
    #endregion
		
		public Credit_Card_Detail()
		{
			this._Passenger_Detail = default(EntityRef<Passenger_Detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profile_ID", DbType="Int")]
		public System.Nullable<int> Profile_ID
		{
			get
			{
				return this._Profile_ID;
			}
			set
			{
				if ((this._Profile_ID != value))
				{
					if (this._Passenger_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfile_IDChanging(value);
					this.SendPropertyChanging();
					this._Profile_ID = value;
					this.SendPropertyChanged("Profile_ID");
					this.OnProfile_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Card_No
		{
			get
			{
				return this._Card_No;
			}
			set
			{
				if ((this._Card_No != value))
				{
					this.OnCard_NoChanging(value);
					this.SendPropertyChanging();
					this._Card_No = value;
					this.SendPropertyChanged("Card_No");
					this.OnCard_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card_Type", DbType="NVarChar(50)")]
		public string Card_Type
		{
			get
			{
				return this._Card_Type;
			}
			set
			{
				if ((this._Card_Type != value))
				{
					this.OnCard_TypeChanging(value);
					this.SendPropertyChanging();
					this._Card_Type = value;
					this.SendPropertyChanged("Card_Type");
					this.OnCard_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expiration_Month", DbType="NVarChar(50)")]
		public string Expiration_Month
		{
			get
			{
				return this._Expiration_Month;
			}
			set
			{
				if ((this._Expiration_Month != value))
				{
					this.OnExpiration_MonthChanging(value);
					this.SendPropertyChanging();
					this._Expiration_Month = value;
					this.SendPropertyChanged("Expiration_Month");
					this.OnExpiration_MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expiration_Year", DbType="NVarChar(50)")]
		public string Expiration_Year
		{
			get
			{
				return this._Expiration_Year;
			}
			set
			{
				if ((this._Expiration_Year != value))
				{
					this.OnExpiration_YearChanging(value);
					this.SendPropertyChanging();
					this._Expiration_Year = value;
					this.SendPropertyChanged("Expiration_Year");
					this.OnExpiration_YearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passenger_Detail_Credit_Card_Detail", Storage="_Passenger_Detail", ThisKey="Profile_ID", OtherKey="Profile_ID", IsForeignKey=true)]
		public Passenger_Detail Passenger_Detail
		{
			get
			{
				return this._Passenger_Detail.Entity;
			}
			set
			{
				Passenger_Detail previousValue = this._Passenger_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Passenger_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Passenger_Detail.Entity = null;
						previousValue.Credit_Card_Details.Remove(this);
					}
					this._Passenger_Detail.Entity = value;
					if ((value != null))
					{
						value.Credit_Card_Details.Add(this);
						this._Profile_ID = value.Profile_ID;
					}
					else
					{
						this._Profile_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Passenger_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
